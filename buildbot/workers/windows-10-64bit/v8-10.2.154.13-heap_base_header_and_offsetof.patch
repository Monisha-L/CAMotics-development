diff --git a/BUILD.gn b/BUILD.gn
index 988c907d96..d04fb816e0 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -5481,7 +5481,7 @@ v8_source_set("v8_bigint") {
   configs = [ ":internal_config" ]
 }

-v8_source_set("v8_heap_base_headers") {
+v8_header_set("v8_heap_base_headers") {
   sources = [
     "src/heap/base/active-system-pages.h",
     "src/heap/base/stack.h",
diff --git a/src/deoptimizer/deoptimizer.h b/src/deoptimizer/deoptimizer.h
index 47c05b491e..a9254f48bc 100644
--- a/src/deoptimizer/deoptimizer.h
+++ b/src/deoptimizer/deoptimizer.h
@@ -19,6 +19,11 @@
 #include "src/wasm/value-type.h"
 #endif  // V8_ENABLE_WEBASSEMBLY

+#ifndef OFFSET_OF
+#define OFFSET_OF(type, field) \
+  (reinterpret_cast<intptr_t>(&(reinterpret_cast<type*>(4)->field)) - 4)
+#endif
+
 namespace v8 {
 namespace internal {

@@ -100,14 +105,14 @@ class Deoptimizer : public Malloced {
                                     DeoptimizeKind* type_out);

   // Code generation support.
-  static int input_offset() { return offsetof(Deoptimizer, input_); }
+  static int input_offset() { return OFFSET_OF(Deoptimizer, input_); }
   static int output_count_offset() {
-    return offsetof(Deoptimizer, output_count_);
+    return OFFSET_OF(Deoptimizer, output_count_);
   }
-  static int output_offset() { return offsetof(Deoptimizer, output_); }
+  static int output_offset() { return OFFSET_OF(Deoptimizer, output_); }

   static int caller_frame_top_offset() {
-    return offsetof(Deoptimizer, caller_frame_top_);
+    return OFFSET_OF(Deoptimizer, caller_frame_top_);
   }

   V8_EXPORT_PRIVATE static int GetDeoptimizedCodeCount(Isolate* isolate);
